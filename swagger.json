{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "Pet support"
  },
  "servers": [
    {
      "url": "https://pets.tryapi.site/api"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Notices",
      "description": "Operations about notices"
    },
    {
      "name": "News",
      "description": "Operations about news"
    },
    {
      "name": "Friends",
      "description": "Operations about friends"
    }
  ],
  "paths": {
    "/notices": {
      "get": {
        "tags": ["Notices"],
        "summary": "Find all notices",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Finds notice by keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category values that need to be considered for filter",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "sell",
              "enum": ["sell", "lost/found", "in good hands"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to display",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limitation on the number of notes",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Notices"],
        "summary": "Add a new notice",
        "requestBody": {
          "description": "Registration's object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoticeRequest"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "description": "Notice added successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeById"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Bad request",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/notices/{noticeId}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Find notice by Id",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "ID of notice to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeById"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notice by Id",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "Delete notice from base",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponceDeleteNoticeById"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Bad request",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/news": {
      "get": {
        "summary": "Get all news",
        "tags": ["News"],
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Article title",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "News list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/friends": {
      "get": {
        "summary": "Get list partners method",
        "tags": ["Friends"],
        "operationId": "getFriends",
        "responses": {
          "200": {
            "description": "Success request with list partners",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Friends"
                }
              }
            }
          },
          "default": {
            "description": "Any unexpecting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration's object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "requestBody": {
          "description": "Registration's object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": ["User"],
        "summary": "User logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful log out"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "patch": {
        "tags": ["User"],
        "summary": "Update current user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Updated object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },

    "/users/pets": {
      "post": {
        "tags": ["User"],
        "summary": "Add my pets",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "My pet object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMyPetsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "My pet added successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMyPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/pets/{petId}": {
      "delete": {
        "tags": ["User"],
        "summary": "Remove pet by id",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveMyPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/favorites": {
      "get": {
        "tags": ["User"],
        "summary": "Get all favorite pets",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "page limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "search",
            "schema": {
              "type": "object",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoritesPets"
                }
              }
            }
          }
        }
      }
    },
    "/users/favorites/{petId}": {
      "patch": {
        "tags": ["User"],
        "summary": "Add pets in favorites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addFavoritesPets"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete pets in favorites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addFavoritesPets"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name", "phone", "city"],
        "properties": {
          "email": {
            "type": "string",
            "example": "test555@mail.com"
          },
          "password": {
            "type": "string",
            "example": "123qweQWE"
          },
          "name": {
            "type": "string",
            "example": "Jill"
          },
          "phone": {
            "type": "string",
            "example": 3801112283
          },
          "city": {
            "type": "string",
            "example": "Bilogorodka, Kyiv"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "massage": {
            "type": "integer",
            "example": "You are sign up successfully! Welcome!"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "test555@mail.com"
              },
              "name": {
                "type": "string",
                "example": "Jill"
              },
              "phone": {
                "type": "string",
                "example": 3801112283
              },
              "city": {
                "type": "string",
                "example": "Bilogorodka, Kyiv"
              },
              "accessToken": {
                "type": "string",
                "example": "2a10HC.0E8pZ9rgn.52Jp4Sjy6TK"
              },
              "refreshToken": {
                "type": "boolean",
                "example": null
              },
              "favorites": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "_id": {
                "type": "string"
              },
              "birthday": {
                "type": "string"
              },
              "pets": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "test555@mail.com"
          },
          "password": {
            "type": "string",
            "example": "123qweQWE"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "63ef81c5986c1693cca9d289"
              },
              "name": {
                "type": "string",
                "example": "Anna"
              },
              "email": {
                "type": "string",
                "example": "support@example.com"
              },
              "city": {
                "type": "string",
                "example": "Kyiv"
              },
              "phone": {
                "type": "string",
                "example": 380679876543
              },
              "accessToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZWY4MWM1OTg2YzE2OTNjY2E5ZDI4OSIsImVtYWlsIjoic2hvc3Rha0BnbWFpbC5jb20iLCJpYXQiOjE2NzY3MDY2NTMsImV4cCI6MTY3Njc5MzA1M30.fwUpZchzH_fC2GTF_m1izwN2TdvAKpsWghTKbCULAsY"
              },
              "refreshToken": {
                "type": "boolean",
                "example": null
              },
              "favorites": {
                "type": "array",
                "items": {
                  "type": "object",
                  "example": {}
                }
              },
              "birthday": {
                "type": "string",
                "example": "20.02.2002"
              },
              "pets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Anna"
          },
          "email": {
            "type": "string",
            "example": "support@example.com"
          },
          "city": {
            "type": "string",
            "example": "Ivankiv, Kyiv"
          },
          "phone": {
            "type": "string",
            "example": 380679876543
          },
          "birthday": {
            "type": "string",
            "example": "20.02.2002"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the operation",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Code of the operation",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Your profile updated successfully!"
          },
          "updatedUser": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "63ef81c5986c1693cca9d289"
              },
              "name": {
                "type": "string",
                "example": "Anna"
              },
              "email": {
                "type": "string",
                "example": "support@example.com"
              },
              "city": {
                "type": "string",
                "example": "Ivankiv, Kyiv"
              },
              "phone": {
                "type": "string",
                "example": 380679876543
              },
              "accessToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZWY4MWM1OTg2YzE2OTNjY2E5ZDI4OSIsImVtYWlsIjoic2hvc3Rha0BnbWFpbC5jb20iLCJpYXQiOjE2NzY3MDY2NTMsImV4cCI6MTY3Njc5MzA1M30.fwUpZchzH_fC2GTF_m1izwN2TdvAKpsWghTKbCULAsY"
              },
              "refreshToken": {
                "type": "boolean",
                "example": null
              },
              "favorites": {
                "type": "array",
                "items": {
                  "type": "object",
                  "example": {}
                }
              },
              "birthday": {
                "type": "string",
                "example": "20.02.2002"
              },
              "pets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "FavoritesPets": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success,"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "notices": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "63f0cfd9736f28f300309cff,"
              },
              "favorites": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "63f0cfd9736f28f300309cff,"
                    },
                    "category": {
                      "type": "string",
                      "description": "Category of notice",
                      "example": "sell"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of notice",
                      "example": "Cute dog"
                    },
                    "petName": {
                      "type": "string",
                      "description": "Name of pet",
                      "example": "Luck"
                    },
                    "birth": {
                      "type": "string",
                      "description": "Date of birth",
                      "example": "09.09.2020"
                    },
                    "breed": {
                      "type": "string",
                      "description": "Breed of pet",
                      "example": "Pomeranian"
                    },
                    "petSex": {
                      "type": "string",
                      "description": "Sex of pet",
                      "example": "male"
                    },
                    "location": {
                      "type": "string",
                      "description": "Location of pet",
                      "example": "Lviv"
                    },
                    "price": {
                      "type": "number",
                      "description": "Price of pet",
                      "example": 50
                    },
                    "petImage": {
                      "type": "string",
                      "description": "Image of pet",
                      "example": "https://editor.swagger.io/"
                    },
                    "comments": {
                      "type": "string",
                      "description": "Сomments about pet",
                      "example": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy. "
                    },
                    "owner": {
                      "type": "string",
                      "description": "User's id owner of notice",
                      "example": "125546464"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "addFavoritesPets": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success,"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "massage": {
            "type": "string",
            "example": "Notice with id 63f0d513736f28f300309d0b added successfully to favorites lists!200"
          }
        }
      },

      "Pet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Patron"
          },
          "birth": {
            "type": "string",
            "example": 2020
          },
          "breed": {
            "type": "string",
            "example": "Jack Russell Terrier"
          },
          "avatarURL": {
            "type": "string",
            "example": null
          },
          "comment": {
            "type": "string",
            "example": "Small tan and white terriers that technically belong to other breeds are sometimes known erroneously as \\\"Jack Russells\\\"."
          },
          "owner": {
            "type": "string",
            "example": "63ef81c5986c1693cca9d289"
          },
          "_id": {
            "type": "string",
            "example": "63f0b3b2b06dba672e91e3b6"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-02-18T11:17:06.974Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-02-18T11:17:06.974Z"
          }
        }
      },
      "AddMyPetsRequest": {
        "type": "object",
        "required": ["name", "birth", "breed", "avatarURL", "comment"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Patron"
          },
          "birth": {
            "type": "string",
            "example": 2020
          },
          "breed": {
            "type": "string",
            "example": "Jack Russell Terrier"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://static.apostrophe.ua/uploads/image/40c8096665a10a5adba37837593a2f49.jpg"
          },
          "comment": {
            "type": "string",
            "example": "Small tan and white terriers that technically belong to other breeds are sometimes known erroneously as \"Jack Russells\"."
          }
        }
      },
      "AddMyPetResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "massage": {
            "type": "integer",
            "example": "Pet added successfully!"
          },
          "pet": {
            "$ref": "#/components/schemas/Pet"
          }
        }
      },
      "RemoveMyPetResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "massage": {
            "type": "integer",
            "example": "Pet removed successfully!"
          }
        }
      },
      "News": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Successfully"
          },
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "63ed0c6c5b30d43d3cc884bf"
                },
                "title": {
                  "type": "string",
                  "example": "Обережно, кліщі!"
                },
                "url": {
                  "type": "string",
                  "example": "https://www.kmlvm.com.ua"
                },
                "description": {
                  "type": "string",
                  "example": "Травневі прогулянки з улюбленцем не лише приємні..."
                },
                "date": {
                  "type": "string",
                  "example": "2022-08-12"
                }
              }
            }
          }
        }
      },
      "NoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "Category of notice",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Title of notice",
              "example": "Cute dog"
            },
            "petName": {
              "type": "string",
              "description": "Name of pet",
              "example": "Luck"
            },
            "birth": {
              "type": "string",
              "description": "Date of birth",
              "example": "09.09.2020"
            },
            "breed": {
              "type": "string",
              "description": "Breed of pet",
              "example": "Pomeranian"
            },
            "petSex": {
              "type": "string",
              "description": "Sex of pet",
              "example": "male"
            },
            "location": {
              "type": "string",
              "description": "Location of pet",
              "example": "Lviv"
            },
            "price": {
              "type": "number",
              "description": "Price of pet",
              "example": "50"
            },
            "petImage": {
              "type": "string",
              "description": "Image of pet",
              "example": "https://editor.swagger.io/"
            },
            "comments": {
              "type": "string",
              "description": "Сomments about pet",
              "example": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam . "
            },
            "owner": {
              "type": "string",
              "description": "User's id owner of notice",
              "example": "125546464"
            }
          }
        }
      },
      "NoticeRequest": {
        "type": "object",
        "required": ["title", "petSex", "location", "price"],
        "properties": {
          "category": {
            "type": "string",
            "description": "Category of notice",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Title of notice",
            "example": "Cute dog"
          },
          "petName": {
            "type": "string",
            "description": "Name of pet",
            "example": "Luck"
          },
          "birth": {
            "type": "string",
            "description": "Date of birth",
            "example": "09.09.2020"
          },
          "breed": {
            "type": "string",
            "description": "Breed of pet",
            "example": "Pomeranian"
          },
          "petSex": {
            "type": "string",
            "description": "Sex of pet",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "Location of pet",
            "example": "Lviv"
          },
          "price": {
            "type": "number",
            "description": "Price of pet",
            "example": 50
          },
          "petImage": {
            "type": "string",
            "description": "Image of pet",
            "example": "https://editor.swagger.io/"
          },
          "comments": {
            "type": "string",
            "description": "Сomments about pet",
            "example": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy. "
          }
        }
      },
      "NoticeById": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the operation",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Code of the operation",
            "example": 200
          },
          "notice": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "description": "Category of notice",
                "example": "sell"
              },
              "title": {
                "type": "string",
                "description": "Title of notice",
                "example": "Cute dog"
              },
              "petName": {
                "type": "string",
                "description": "Name of pet",
                "example": "Luck"
              },
              "birth": {
                "type": "string",
                "description": "Date of birth",
                "example": "09.09.2020"
              },
              "breed": {
                "type": "string",
                "description": "Breed of pet",
                "example": "Pomeranian"
              },
              "petSex": {
                "type": "string",
                "description": "Sex of pet",
                "example": "male"
              },
              "location": {
                "type": "string",
                "description": "Location of pet",
                "example": "Lviv"
              },
              "price": {
                "type": "number",
                "description": "Price of pet",
                "example": 50
              },
              "petImage": {
                "type": "string",
                "description": "Image of pet",
                "example": "https://editor.swagger.io/"
              },
              "comments": {
                "type": "string",
                "description": "Сomments about pet",
                "example": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy. "
              },
              "owner": {
                "type": "string",
                "description": "User's id owner of notice",
                "example": "125546464"
              }
            }
          }
        }
      },
      "ResponceDeleteNoticeById": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the operation",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Code of the operation",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Category of notice",
            "example": "Notice was deleted successfully!"
          }
        }
      },
      "Friend": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "friend_id": {
            "type": "string",
            "example": "63eddca3e7fb348e18e4cc34"
          },
          "title": {
            "type": "string",
            "example": "Притулок для бездомних тварин 'Сіріус'"
          },
          "url": {
            "type": "string",
            "example": "https://dogcat.com.ua"
          },
          "addressUrl": {
            "type": "string",
            "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png"
          },
          "address": {
            "type": "string",
            "example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
          },
          "phone": {
            "type": "string",
            "example": 380931934069
          },
          "email": {
            "type": "string",
            "example": "hello@happypaw.ua"
          },
          "workDays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "isOpen": {
                  "type": "boolean",
                  "example": "true,"
                },
                "startTime": {
                  "type": "string",
                  "example": "09:00,"
                },
                "endTime": {
                  "type": "string",
                  "example": "17:00"
                }
              }
            }
          }
        }
      },
      "Friends": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Friend"
        }
      },
      "BadRequestError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Error message"
          }
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Wrong params bearer! Not authorized"
          }
        }
      },
      "ConflictError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User with email ${email} is registered"
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Internal server error"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
