{"version":3,"file":"static/js/20.8a28e12f.chunk.js","mappings":"mMAoDA,UA5CgB,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAAcC,SAASC,MAAM,KAkB9C,OANAC,EAAAA,EAAAA,YAAU,WACe,GAAnBJ,EAASK,QACXP,EAAS,OAEb,GAAG,CAACE,KAGF,UAAC,KAAG,CACFM,GAAG,UACHC,QAAS,OACTC,WAAY,SACZC,cAAe,SAAS,WAExB,SAAC,IAAO,CAACH,GAAG,KAAKI,QAAS,OAAO,SAAC,4BAKlC,SAAC,KAAa,CAACC,SAzBF,SAAAC,GACfA,EAAEC,iBACFC,QAAQC,IAAIH,EAAEI,OAGhB,KAqBI,SAAC,KAAoB,KAErB,SAAC,EAAAC,SAAQ,CAACC,UAAU,EAAM,UACxB,SAAC,KAAM,QAIf,C","sources":["pages/Notices.jsx"],"sourcesContent":["import { Box, Heading } from '@chakra-ui/react';\nimport React, { Suspense, useEffect } from 'react';\nimport {\n  NoticesCategoriesNav,\n  NoticesSearch,\n} from '../components/Notices';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nconst Notices = () => {\n  const navigate = useNavigate()\n  const location = useLocation().pathname.split('/')\n\n  // const [search, setSearch] = useState('');\n  // const [searchParams, setSearchParams] = useSearchParams()\n  // console.log(searchParams)\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(e.target)\n    // const query = e.target[0].value;\n    // setSearchParams(() => query);\n  };\n\n  useEffect(() => {\n    if (location.length == 2) {\n      navigate('sell')\n    }\n  }, [location]);\n\n  return (\n    <Box\n      as=\"section\"\n      display={'flex'}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      <Heading as=\"h1\" variant={'main'}>\n        Find your favorite pet\n      </Heading>\n      {/* <NoticeCategoryItem /> */}\n\n      <NoticesSearch onSubmit={onSubmit} />\n      <NoticesCategoriesNav />\n      {/* <NoticesCategoriesList itemList={notices} /> */}\n      <Suspense fallback={false}>\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\n\n\nexport default Notices;\n\n\n\n"],"names":["navigate","useNavigate","location","useLocation","pathname","split","useEffect","length","as","display","alignItems","flexDirection","variant","onSubmit","e","preventDefault","console","log","target","Suspense","fallback"],"sourceRoot":""}